-- 1. Selama transaksi yang terjadi selama 2021, pada bulan apa total nilai transaksi
-- (after_discount) paling besar? Gunakan is_valid = 1 untuk memfilter data transaksi.
-- Source table: order_detail

select 
extract(month from order_date) month,
sum(round(after_discount)) total_transaksi
from `dataset.order_detail`
where 
extract(year from order_date)= 2021
and is_valid= 1
group by month
order by total_transaksi desc

select * from `dataset.order_detail`
select * from `dataset.sku_detail`

-- 2. Selama transaksi pada tahun 2022, kategori apa yang menghasilkan nilai transaksi paling besar? 
-- Gunakan is_valid = 1 untuk memfilter data transaksi.
-- Source table: order_detail, sku_detail

select 
s.category,
sum(o.after_discount) as total_transaksi_2022
from `dataset.order_detail` o
join `dataset.sku_detail` s on (s.id=o.sku_id)
where 
extract(year from o.order_date) = 2022
and is_valid= 1
group by s.category
order by total_transaksi_2022 desc


-- 3. Bandingkan nilai transaksi dari masing-masing kategori pada tahun 2021 dengan 2022.
-- Sebutkan kategori apa saja yang mengalami peningkatan dan kategori apa yang mengalami
-- penurunan nilai transaksi dari tahun 2021 ke 2022. Gunakan is_valid = 1 untuk memfilter data transaksi.
-- Source table: order_detail, sku_detail

WITH transaksi_2021 as (
select 
s.category,
sum(o.after_discount) as total_transaksi_2021
from `dataset.order_detail` o
join `dataset.sku_detail` s on (s.id=o.sku_id)
where 
extract(year from o.order_date) = 2021
and is_valid= 1
group by s.category
)
, transaksi_2022 as (
select 
s.category,
sum(o.after_discount) as total_transaksi_2022
from `dataset.order_detail` o
join `dataset.sku_detail` s on (s.id=o.sku_id)
where 
extract(year from o.order_date) = 2022
and is_valid= 1
group by s.category
)

select
 transaksi_2021.category, total_transaksi_2021, total_transaksi_2022,
((total_transaksi_2022-total_transaksi_2021)/total_transaksi_2021)*100 as status_perubahan,
case
when total_transaksi_2022 > total_transaksi_2021 then 'peningkatan'
when total_transaksi_2022 < total_transaksi_2021 then 'penurunan'
end as Expl
from transaksi_2021
join transaksi_2022 ON (transaksi_2022.category = transaksi_2021.category)
order by status_perubahan desc;

-- 4. Tampilkan top 5 metode pembayaran yang paling populer digunakan selama 2022
-- (berdasarkan total unique order). Gunakan is_valid = 1 untuk memfilter data transaksi.
-- Source table: order_detail, payment_method

select 
p.payment_method,
count(distinct p.id) as total_payment
from `dataset.order_detail` as o
join `dataset.payment_detail` as p ON (o.payment_id = p.id)
where 
is_valid = 1
and extract(year from order_date) = 2022
group by 
p.payment_method
order by total_payment
limit 5

-- 5. : Urutkan dari ke-5 produk ini berdasarkan nilai transaksinya.
-- 1 Samsung
-- 2 Apple
-- 3 Sony
-- 4 Huawei
-- 5 Lenovo
-- Gunakan is_valid = 1 untuk memfilter data transaksi.
-- Source table: order_detail, sku_detail

WITH Gadget_Order as (
SELECT  DISTINCT O.id, S.sku_name,
CASE
When S.sku_name like '%samsung%' Then 'Samsung'
When S.sku_name like '%sony%' Then 'Sony'
When S.sku_name like '%huawei%' Then 'Huawei'
When S.sku_name like '%lenovo%' Then 'Lenovo'
when Lower(S.sku_name) like '%apple%' or lower(S.sku_name) like '%iphone%' Then 'Apple'
END as Product_brand,
O.qty_ordered as Total_order,
O.after_discount as Total_Transaction
FROM `dataset.order_detail` as O
Join `dataset.sku_detail` as S on (S.id = O.sku_id)
WHERE O.is_valid = 1)

SELECT  Product_brand,
sum(round(Total_order)) as Total_order, 
sum(round(Total_Transaction)) as Total_Transaction
FROM Gadget_Order
WHERE Product_brand is not null
GROUP by Product_brand
ORDER by Total_Transaction Desc;
